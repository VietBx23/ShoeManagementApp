<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="javax.management.InstanceAlreadyExistsException"/>
    <fullyQualifiedTypeName name="org.testng.annotations.Test"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.powermock.api.mockito.PowerMockito"/>
    <fullyQualifiedTypeName name="org.mockito.ArgumentMatcher"/>
    <fullyQualifiedTypeName name="org.mockito.ArgumentMatchers"/>
    <fullyQualifiedTypeName name="net.bytebuddy.jar.asm.commons.RecordComponentRemapper"/>
    <fullyQualifiedTypeName name="org.hamcrest.CoreMatchers"/>
    <fullyQualifiedTypeName name="org.testng.Assert"/>
    <fullyQualifiedTypeName name="com.snethlios.dao.ChiTietPhieuXuatDao"/>
    <fullyQualifiedTypeName name="org.testng.annotations.BeforeMethod"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="java.lang.Double"/>
    <fullyQualifiedTypeName name="org.junit.Assert"/>
    <fullyQualifiedTypeName name="com.snethlios.dao.PhieuXuatDAO"/>
    <fullyQualifiedTypeName name="com.snethlios.entity.PhieuXuat"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="com.snethlios.utils.XDate"/>
    <fullyQualifiedTypeName name="com.snethlios.entity.ChiTietPhieuXuat"/>
    <fullyQualifiedTypeName name="com.snethlios.entity.KhachHang"/>
    <fullyQualifiedTypeName name="com.snethlios.entity.SanPham"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="org.apache.poi.hssf.usermodel.HSSFWorkbook"/>
    <fullyQualifiedTypeName name="org.apache.poi.xssf.streaming.SXSSFWorkbook"/>
    <fullyQualifiedTypeName name="org.apache.poi.xssf.usermodel.XSSFSheet"/>
    <fullyQualifiedTypeName name="org.apache.poi.xssf.usermodel.XSSFRow"/>
    <fullyQualifiedTypeName name="org.apache.poi.xssf.usermodel.XSSFWorkbook"/>
</qualifiedTypeNameHistroy>

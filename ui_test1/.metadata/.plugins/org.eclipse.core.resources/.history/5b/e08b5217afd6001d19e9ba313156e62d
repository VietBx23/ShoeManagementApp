package com.snethlios.dao;

import java.util.ArrayList;
import java.util.List;

import org.hamcrest.CoreMatchers;
import org.junit.Assert;

import org.mockito.ArgumentMatchers;
import org.powermock.api.mockito.PowerMockito;
import org.powermock.core.classloader.annotations.PrepareForTest;
import org.testng.IObjectFactory;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.ObjectFactory;
import org.testng.annotations.Test;

import com.snethlios.entity.KhachHang;
import com.snethlios.utils.JdbcHelper;

@PrepareForTest({ JdbcHelper.class, KhachHangDAO.class })
public class KhachHangDAOTest {
	KhachHangDAO khdao;
	KhachHangDAO khdaospy;

	public KhachHangDAOTest() {
		super();
	}

	@ObjectFactory
	public IObjectFactory getObjectFactory() {
		return new org.powermock.modules.testng.PowerMockObjectFactory();
	}

	@BeforeMethod
	public void setUpMethod() throws Exception {
		khdao = new KhachHangDAO();
		PowerMockito.mockStatic(JdbcHelper.class);
		khdaospy = PowerMockito.spy(new KhachHangDAO());
	}

	@Test(expectedExceptions = Exception.class)
	public void insertTestWithModelNull() {
		KhachHang model = null;
		KhachHangDAO instance = new KhachHangDAO();
		instance.insert(model);
	}

	@Test()
	public void insertTestWithModelEmpty() {
		KhachHang model = new KhachHang();
		KhachHangDAO instance = new KhachHangDAO();
		instance.insert(model);
	}

	@Test()
	public void insertTestWithModelValid() {
		KhachHang model = new KhachHang();
		model.setMakh("KH01");
		model.setTenkh("Pham Dang Nguyen");
		model.setGioiTinh(true);
		model.setDienThoai("0383689355");
		model.setDiaChi("Quan 12");
		model.setGhichu("Giao vao buoi chieu");
		KhachHangDAO instance = new KhachHangDAO();
		instance.insert(model);
	}

	@Test()
	public void insertTestWithNullMakh() {
		KhachHang model = new KhachHang();
		model.setMakh("");
		model.setTenkh("Pham Dang Nguyen");
		model.setGioiTinh(true);
		model.setDienThoai("0383689355");
		model.setDiaChi("Quan 12");
		model.setGhichu("Giao vao buoi chieu");
		KhachHangDAO instance = new KhachHangDAO();
		instance.insert(model);
	}

	@Test()
	public void insertTestWithNullTenkh() {
		KhachHang model = new KhachHang();
		model.setMakh("KH01");
		model.setTenkh("");
		model.setGioiTinh(true);
		model.setDienThoai("0383689355");
		model.setDiaChi("Quan 12");
		model.setGhichu("Giao vao buoi chieu");
		KhachHangDAO instance = new KhachHangDAO();
		instance.insert(model);
	}

	@Test()
	public void insertTestWithNullSDT() {
		KhachHang model = new KhachHang();
		model.setMakh("KH01");
		model.setTenkh("Pham Dang Nguyen");
		model.setGioiTinh(true);
		model.setDienThoai("");
		model.setDiaChi("Quan 12");
		model.setGhichu("Giao vao buoi chieu");
		KhachHangDAO instance = new KhachHangDAO();
		instance.insert(model);
	}

	@Test()
	public void insertTestWithNullAddress() {
		KhachHang model = new KhachHang();
		model.setMakh("KH01");
		model.setTenkh("Pham Dang Nguyen");
		model.setGioiTinh(true);
		model.setDienThoai("0383689355");
		model.setDiaChi("");
		model.setGhichu("Giao vao buoi chieu");
		KhachHangDAO instance = new KhachHangDAO();
		instance.insert(model);
	}

	@Test()
	public void insertTestWith7Number() {
		KhachHang model = new KhachHang();
		String phone = "0725435";
		model.setDienThoai(phone);
	}

	@Test()
	public void insertTestWith10Number() {
		KhachHang model = new KhachHang();
		String phone = "0725435894";
		model.setDienThoai(phone);
	}

	@Test()
	public void insertTestWith12Number() {
		KhachHang model = new KhachHang();
		String phone = "072543589453";
		model.setDienThoai(phone);
	}

	@Test()
	public void deleteWithoutMakh() {
		String makh = null;
		KhachHangDAO instance = new KhachHangDAO();
		instance.delete(makh);
	}

	@Test()
	public void deleteValid() {
		String makh = "KH005";
		KhachHangDAO instance = new KhachHangDAO();
		instance.delete(makh);
	}

	@Test(expectedExceptions = Exception.class)
	public void UpdateInvalid() {
		KhachHang makh = null;
		KhachHangDAO instance = new KhachHangDAO();
		instance.update(makh);
	}

	@Test()
	public void UpdateWithoutTenkh() {
		KhachHang model = new KhachHang();
		model.setTenkh(null);
		KhachHangDAO instance = new KhachHangDAO();
		instance.update(model);
	}

	@Test()
	public void UpdateWithoutPhoneNumber() {
		KhachHang model = new KhachHang();
		model.setDienThoai(null);
		KhachHangDAO instance = new KhachHangDAO();
		instance.update(model);
	}

	@Test()
	public void UpdateWithoutAddress() {
		KhachHang model = new KhachHang();
		model.setGhichu(null);
		KhachHangDAO instance = new KhachHangDAO();
		instance.update(model);
	}

	@Test(expectedExceptions = Exception.class)
	public void testFindByIdValid() throws Exception {
		String makh = "KH001";
		KhachHang model = new KhachHang();
		List<KhachHang> ls = new ArrayList<>();
		ls.add(model);
		PowerMockito.doReturn(ls).when(khdaospy, "select", ArgumentMatchers.anyString(), ArgumentMatchers.any());
		KhachHang rs = khdaospy.selectByID(makh);
		Assert.assertThat(rs, CoreMatchers.is(model));

	}

	@Test(expectedExceptions = Exception.class)
	public void testNotFindById() throws Exception {
		String makh = "2523";
		KhachHang model = null;
		List<KhachHang> ls = new ArrayList<>();
//        ls.add(model);
		PowerMockito.doReturn(ls).when(khdaospy, "select", ArgumentMatchers.anyString(), ArgumentMatchers.any());
		KhachHang rs = khdaospy.selectByID(makh);
		Assert.assertThat(rs, CoreMatchers.is(model));

	}

	// moi update
	public void testPindById() throws Exception {
		System.out.println("findID");
		String maKH = "KH001";
		KhachHang expectedResult = new KhachHang();

		List<KhachHang> resultList = new ArrayList<>();
		resultList.add(expectedResult);
		PowerMockito.doReturn(resultList).when(khdaospy, "selectBySQL", ArgumentMatchers.anyString(),
				ArgumentMatchers.any());

		KhachHang result = khdaospy.selectByID(maKH);
		org.junit.Assert.assertThat(result, CoreMatchers.is(expectedResult));
//		assertThat(result, CoreMatchers.is(expectedResult));
	}

	@Test
	public void testPindByIdNull() throws Exception {
		System.out.println("findID");
		String maKH = null;
		KhachHang expectedResult = new KhachHang();

		List<KhachHang> resultList = new ArrayList<>();
		resultList.add(expectedResult);
		PowerMockito.doReturn(resultList).when(khdaospy, "selectBySQL", ArgumentMatchers.anyString(),
				ArgumentMatchers.any());

		KhachHang result = khdaospy.selectByID(maKH);
		org.junit.Assert.assertThat(result, CoreMatchers.is(expectedResult));
//		assertThat(result, CoreMatchers.is(expectedResult));
	}

	@Test
	public void testPindByIdValidInt() throws Exception {
		System.out.println("findID");
		String maKH = String.valueOf("abc");
		KhachHang expectedResult = new KhachHang();

		List<KhachHang> resultList = new ArrayList<>();
		resultList.add(expectedResult);
		PowerMockito.doReturn(resultList).when(khdaospy, "selectBySQL", ArgumentMatchers.anyString(),
				ArgumentMatchers.any());

		KhachHang result = khdaospy.selectByID(maKH);
		org.junit.Assert.assertThat(result, CoreMatchers.is(expectedResult));
//		assertThat(result, CoreMatchers.is(expectedResult));
	}

}